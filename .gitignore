# version file generated by setuptools-scm
/vllm/_version.py

# vllm-flash-attn built from source
vllm/vllm_flash_attn/*

# triton jit
.triton

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
cmake-build-*/
CMakeUserPresets.json
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
/.deps/

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# generated files
**/generated/**

# uv
uv.lock

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site
docs/argparse
docs/examples/*
!docs/examples/README.md

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# VSCode
.vscode/

# Claude
CLAUDE.md
.claude/

# Codex
AGENTS.md
.codex/

# DS Store
.DS_Store

# Results
*.csv

# Python pickle files
*.pkl

# Sphinx documentation
_build/

# vim swap files
*.swo
*.swp

# hip files generated by PyTorch
*.hip
*_hip*
hip_compat.h

# Benchmark dataset
benchmarks/**/*.json

# Linting
actionlint
shellcheck*/

# Ignore moe/marlin_moe gen code
csrc/moe/marlin_moe_wna16/kernel_*

# Ignore ep_kernels_workspace folder
ep_kernels_workspace/
zbug.py
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/da38e8ed0245046e2f3d817eeb1089513cd0983b217a9e6f562e0bfb262cb2e3nvidia-Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct.lock
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/.locks/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/0cc5f81ff2afe5203e4c13d41c7d3c88cd2f74469a30dd4d9dcad685a1177f63.lock
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/.locks/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/0fde2fcc0ec44f067e7429e647bfbeeb159a649a8fd9f209ff315ec5411af6b4.lock
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/.locks/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/7b32a6b1393d5731ffcbc96ccc94db72b851953bace5edbab84a722b8f85a34c.lock
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/.locks/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/19715f8e4d923e046ca58fc49749ff6fd8bd5d0cff7afbb2171ac160a443ea2d.lock
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/.locks/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/c2ccf616750c9d349d4056a55ee661f77e88fbd8cb707fe87bc892b07bfd8798.lock
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/.locks/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/e0d0a113738d298f983e4e1db2c6902f7667e14c563c8bc470c183110286a89a.lock
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/.locks/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/e21734608eef2fc2c1571632db0c8fbda3c6aeb233eda54e41a30365dd9beefc.lock
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/.locks/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/f247116125f57168497e3c542c647a288df9b9351bc51903c750eedd75f51122.lock
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/blobs/0cc5f81ff2afe5203e4c13d41c7d3c88cd2f74469a30dd4d9dcad685a1177f63
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/blobs/0fde2fcc0ec44f067e7429e647bfbeeb159a649a8fd9f209ff315ec5411af6b4
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/blobs/7b32a6b1393d5731ffcbc96ccc94db72b851953bace5edbab84a722b8f85a34c
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/blobs/19715f8e4d923e046ca58fc49749ff6fd8bd5d0cff7afbb2171ac160a443ea2d
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/blobs/c2ccf616750c9d349d4056a55ee661f77e88fbd8cb707fe87bc892b07bfd8798
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/blobs/e0d0a113738d298f983e4e1db2c6902f7667e14c563c8bc470c183110286a89a
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/blobs/e21734608eef2fc2c1571632db0c8fbda3c6aeb233eda54e41a30365dd9beefc
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/blobs/f247116125f57168497e3c542c647a288df9b9351bc51903c750eedd75f51122
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/refs/main
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/snapshots/fa3a10b9c6ad02f42c81e1d68dcf6967afb230ef/model-00001-of-00007.safetensors
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/snapshots/fa3a10b9c6ad02f42c81e1d68dcf6967afb230ef/model-00002-of-00007.safetensors
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/snapshots/fa3a10b9c6ad02f42c81e1d68dcf6967afb230ef/model-00003-of-00007.safetensors
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/snapshots/fa3a10b9c6ad02f42c81e1d68dcf6967afb230ef/model-00004-of-00007.safetensors
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/snapshots/fa3a10b9c6ad02f42c81e1d68dcf6967afb230ef/model-00005-of-00007.safetensors
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/snapshots/fa3a10b9c6ad02f42c81e1d68dcf6967afb230ef/model-00006-of-00007.safetensors
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/snapshots/fa3a10b9c6ad02f42c81e1d68dcf6967afb230ef/model-00007-of-00007.safetensors
models/Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/models--nvidia--Llama-3.1-Nemotron-8B-UltraLong-1M-Instruct/snapshots/fa3a10b9c6ad02f42c81e1d68dcf6967afb230ef/model.safetensors.index.json
models/Qwen2.5-1.5B-Instruct/3b9e5fde46384486d9e9d32c2ed2e5b2f62da97702bd1e3c718451f2ebee13bbQwen-Qwen2.5-1.5B-Instruct.lock
models/Qwen2.5-1.5B-Instruct/.locks/models--Qwen--Qwen2.5-1.5B-Instruct/dd924a11b4c220f385b51ffa522daea7c9f3d850e31b162bb5661df483c6d3ee.lock
models/Qwen2.5-1.5B-Instruct/models--Qwen--Qwen2.5-1.5B-Instruct/.no_exist/989aa7980e4cf806f80c7fef2b1adb7bc71aa306/model.safetensors.index.json
models/Qwen2.5-1.5B-Instruct/models--Qwen--Qwen2.5-1.5B-Instruct/blobs/dd924a11b4c220f385b51ffa522daea7c9f3d850e31b162bb5661df483c6d3ee
models/Qwen2.5-1.5B-Instruct/models--Qwen--Qwen2.5-1.5B-Instruct/refs/main
models/Qwen2.5-1.5B-Instruct/models--Qwen--Qwen2.5-1.5B-Instruct/snapshots/989aa7980e4cf806f80c7fef2b1adb7bc71aa306/model.safetensors
vllm_profile/dgx2-2.hpc.engr.oregonstate.edu_3379392.1751524767841298996.pt.trace.json.gz
vllm_profile/dgx2-2.hpc.engr.oregonstate.edu_3381827.1751524790557705493.pt.trace.json.gz
vllm_profile/dgx2-2.hpc.engr.oregonstate.edu_3381828.1751524793270700909.pt.trace.json.gz
vllm_profile/dgx2-2.hpc.engr.oregonstate.edu_3381829.1751524786842233990.pt.trace.json.gz
vllm_profile-v1/dgx2-2.hpc.engr.oregonstate.edu_2476322.1751570234974384243.pt.trace.json.gz
vllm_profile-v2/dgx2-2.hpc.engr.oregonstate.edu_2613434.1751572038978746187.pt.trace.json.gz
